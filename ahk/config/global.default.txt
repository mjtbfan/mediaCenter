; required setting categories -> [General], [Display], [Boot], [LoadScreen], [Pause], [Executables]
; without these categories the script will not run

; NOTE: lines that START WITH ; are registered as comments and will be ignored by config reading functions

[General]
; forces the window to activate if its the current program in main
ForceActivateWindow = false

; sets the ms for more complicated loops to sleep for to reduce cpu usage
LoopSleep = 70

; enables multitasking through a double press of the xbox home button
AllowMultiTasking = false

; allows multitasking to be done during a game (NOTE: this could crash many older games due to them hating alt-tab)
AllowMultiTaskingGame = false

; max number of xinput controllers to poll
MaxXInputControllers = 4

; required to use xbox controllers (file should be C:\Windows\System32\xinput1_3.dll)
XInputDLL = C:\Windows\System32\xinput1_3.dll

; highest -> lowest priority of executables (Games from gamelist included)
PriorityOrder = Browser, Game, GameLauncher, Home


[Display]
; monitor number to get sizing info / display loading screen (any non-valid num = primary) 
MonitorNum = 0

; width & height for loading screen (if 0 = autodetect size of monitor)
Width = 0
Height = 0


[Boot]
; enables the boot script determined by BootScript
EnableBoot = false

; an AHK script that runs after the global config is digested, but before any main actions take place [TODO - better explanation]
BootScript = 


[LoadScreen]
; enables whether or not a loadscreen will be shown between executables
EnableLoadScreen = false

; an AHK script that creates the gui for the loadscreen
CreateLoadScript = 

; an AHK script that updates the loadscreen with whatever kwargs user passes
UpdateLoadScript = 

; an AHK script that destroys the loadscreen
DestroyLoadScript = 


[Pause]
; enables pause menu that activates from the script in PauseScript
EnablePause = false

; disables the pause menu on specific programs/programlists as a comma-deliminated list
DisablePausePrograms = 

; an AHK script that is handled when pause is activated
PauseScript = 


[Executables]
; list of executables to be checked if running & will be affected by priority
; NOTE: Home IS REQUIRED
Home = 
HomeDir = 

GameLauncher = 
GameLauncherDir = 

Browser = 
BrowserDir = 


[ListExecutables]
; if listname contains string "_EXE" -> checks for program using ProcessExist()
; if listname contains string "_WNDW" -> checks for program using WinShown()/WinExist()

; games are determined if listname contains string "Game"
; Ex.
;    WinGame_EXE = config\lists\win_EXE.txt
;    EmuGame_EXE = config\lists\emu_EXE.txt

; overrides are determined if list contains string "Override"
; an override is a program that supersedes the priority lsit
; Ex.
;    LoadOverride_WNDW = config\lists\load_WNDW.txt


[BGExecutables]
; programs that can be checked in specific user-custom code, they are not recognized by the
; priority list and are run minimized
; Ex.
;    Steam = Steam.exe
;    SteamDir = C:\Steam