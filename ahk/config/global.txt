; required setting categories -> [General], [Display], [Boot], [LoadScreen], [Pause], [Executables]
; without these categories the script will not run

; NOTE: lines that START WITH ; are registered as comments and will be ignored by config reading functions

[General]
; forces media center to always run by using companion script to ensure running
ForceMaintainMain = false

; forces the window to activate if its the current program in main
ForceActivateWindow = false

; sets the ms for more complicated loops to sleep for to reduce cpu usage
AvgLoopSleep = 100

; enables multitasking through a double press of the xbox home button
AllowMultiTasking = false

; allows multitasking to be done during a game (NOTE: this could crash many older games due to them hating alt-tab)
AllowMultiTaskingGame = false

; max number of xinput controllers to poll
MaxXInputControllers = 4

; required to use xbox controllers (file should be C:\Windows\System32\xinput1_3.dll)
XInputDLL = C:\Windows\System32\xinput1_3.dll

; highest -> lowest priority of executables (Games from gamelist included)
PriorityOrder = Override, Browser, Game, GameLauncher, Home

; sets the directory for custom libraries to be included in main
CustomLibDir = lib-custom\

[Display]
; monitor number to get sizing info / display loading screen (any non-valid num = primary) 
MonitorNum = 0

; width & height for loading screen (if 0 = autodetect size of monitor)
Width = 0
Height = 0


[Boot]
; enables the boot script determined by BootFunc
EnableBoot = true

; an AHK script that runs after the global config is digested, but before any main actions take place [TODO - better explanation]
StartBoot = boot


[LoadScreen]
; enables whether or not a loadscreen will be shown between executables
Enable = false

; an AHK script that creates the gui for the loadscreen
Build = buildLoadScreen

; an AHK script that checks if the loadscreen is shown
Show = showLoadScreen

; an AHK script that updates the loadscreen with whatever kwargs user passes
; NOTE - update should build and/or show loadscreen if its not
Update = updateLoadScreen

; an AHK script that destroys the loadscreen (usually shutdown)
Destroy = destroyLoadScreen


[PauseScreen]
; enables pause menu that activates from the script in PauseFunc
EnablePause = false

; an AHK script that is handled when pause is created
Build = buildPauseScreen

; an AHK script that gets the status of the pausescreen
Exist = existPauseScreen

; an AHK script that is handled when pause is opened (will check to see if appropriate to create)
Show = showPauseScreen

; an AHK script that is handled when pause is activated
; NOTE - activate should build and/or show pause screen if its not
Activate = activatePauseScreen

; an AHK script that is handled when pause is closed
Hide = hidePauseScreen

; an AHK script that is handled when pause is destroyed (usually shutdown)
Destroy = destroyPauseScreen


[Executables]
; list of executables to be checked if running & will be affected by priority

; if name contains string "_EXE" -> checks for program using ProcessExist()
; if name contains string "_WNDW" -> checks for program using WinShown()/WinExist()
; NAME MUST CONTAIN ONE OF THE ABOVE TO BE RECOGNIZED AS AN EXECUTABLE

; if _Function exists, it overrides the default behavior of that function

; will be referenced by checking lib-custom for function names
; (ei. lib-custom\home.ahk:homeMin())
; NOTE: Home IS REQUIRED

Home = C:\kodi\kodi.lnk
Home_EXE = kodi.exe
Home_Minimize = homeMin
Home_Restore = homeRestore

GameLauncher = C:\LaunchBox\BigBox.lnk
GameLauncher_EXE = BigBox.exe
GameLauncher_Minimize = gameLauncherMin
GameLauncher_Restore = gameLauncherRestore

Browser = C:\fakepath\chrome.exe
Browser_EXE = chrome.exe
Browser_Minimize = browserMin
Browser_Restore = browserRestore


[ListExecutables]
; follows the same rules as Executables, but treats an entire list(s) of 
; executables with the same configuration

Game_EXE = config\lists\win_EXE.txt, config\lists\emu_EXE.txt
Game_Minimize = gameMin
Game_Restore = gameRestore

Override_WNDW = config\lists\load_WNDW.txt

[BGExecutables]
; programs that can be checked in specific user-custom code, they are not recognized by the
; priority list and are run minimized
; Ex.
;    Steam = Steam.exe
;    SteamDir = C:\Steam

Steam = C:\Steam\Steam.lnk
Steam_EXE = Steam.exe

JoyToKey = C:\JoyToKey_en\JoyToKey.lnk
JoyToKey_EXE = JoyToKey.exe